==============================================================================
------------------------------------------------------------------------------
*sf.nvim* Salesforce development plugin
*SfNvim*

MIT License Copyright (c) 2024 Xi Xiao


------------------------------------------------------------------------------
                                                             *Sf.get_target_org*
                              `Sf.get_target_org`
Toggle the SFTerm float window.

------------------------------------------------------------------------------
                                                                *Sf.toggle_term*
                                `Sf.toggle_term`
Toggle the SFTerm float window.

------------------------------------------------------------------------------
                                                              *Sf.save_and_push*
                               `Sf.save_and_push`
Save the file in the current buffer and push to target_org.

------------------------------------------------------------------------------
                                                                   *Sf.retrieve*
                                 `Sf.retrieve`
Retrieve the file in the current buffer from target_org.

------------------------------------------------------------------------------
                                                                     *Sf.cancel*
                                  `Sf.cancel`
Terminate the running command in SFTerm.

------------------------------------------------------------------------------
                                                              *Sf.go_to_sf_root*
                               `Sf.go_to_sf_root`
Enter the sf project root path in SFTerm.

------------------------------------------------------------------------------
                                                                        *Sf.run*
                                    `Sf.run`
Allows to pass the user defined command into SFTerm.

------------------------------------------------------------------------------
                                                             *Sf.fetch_org_list*
                              `Sf.fetch_org_list`
Run "sf org list" command under the hood and stores the org list.
If a target_org is found, the value is saved into "require('sf.util').target_org", an internal variable.

------------------------------------------------------------------------------
                                                             *Sf.set_target_org*
                              `Sf.set_target_org`
Display the list of available orgs, and allow to define the target_org.
Run "sf config set target-org" command under the hood to set the target_org.

------------------------------------------------------------------------------
                                                      *Sf.set_global_target_org*
                           `Sf.set_global_target_org`
Salesforce sf command allows users to define a global target_org.
Run "sf config set target-org --global " command under the hood.

------------------------------------------------------------------------------
                                                         *Sf.diff_in_target_org*
                            `Sf.diff_in_target_org`
Fetch the file in the current buffer from target_org and display in the Nvim diff mode.
The left window displays the target_org verison, the right window displays the local verison.

------------------------------------------------------------------------------
                                                                *Sf.diff_in_org*
                                `Sf.diff_in_org`
Similar to |Sf.diff_in_target_org|, you can choose which org to diff with.
The left window displays the org verison, the right window displays the local verison.

------------------------------------------------------------------------------
                                                               *Sf.pull_md_json*
                               `Sf.pull_md_json`
Download metadata name list, e.g. Apex names, LWC names, StaticResource names, etc. as Json files into the the project root path "md" folder.

------------------------------------------------------------------------------
                                                        *Sf.list_md_to_retrieve*
                            `Sf.list_md_to_retrieve`
Choose a specific metadata file to retrieve.
Its popup list depends on data retrieved by |Sf.retrieve_metadata_lists| in prior.

------------------------------------------------------------------------------
                                                           *Sf.pull_and_list_md*
                             `Sf.pull_and_list_md`
Pull pre-defined metadata files to local and list them in telescope for further retrieving
It's |Sf.pull_md_json| and |Sf.list_md_to_retrieve| in one go.

------------------------------------------------------------------------------
                                                          *Sf.pull_md_type_json*
                             `Sf.pull_md_type_json`
Download metadata-type list, e.g. ApexClass, LWC, Aura, FlexiPage, etc. as a Json file into the project root path "md" folder.

------------------------------------------------------------------------------
                                                   *Sf.list_md_type_to_retrieve*
                         `Sf.list_md_type_to_retrieve`
Select a specific metadata-type to download all its files. For example, download all ApexClass files.
Its popup list depends on data retrieved by |Sf.pull_metadata_type_list| in prior.

------------------------------------------------------------------------------
                                                      *Sf.pull_and_list_md_type*
                           `Sf.pull_and_list_md_type`
Pull the list of metadata-types into a local json file, and list them in a pop-up.
It's |Sf.pull_md_type_json| and |Sf.list_md_type_to_retrieve| in one go.

------------------------------------------------------------------------------
                                                 *Sf.retrieve_apex_under_cursor*
                        `Sf.retrieve_apex_under_cursor`
Uses the word under the cursor as Apex name to attempt to retreive from the org.
A convenient way to quickly pull Apex into local.

------------------------------------------------------------------------------
                                                           *Sf.open_test_select*
                             `Sf.open_test_select`
Open a top-split window to display the Apex tests in the current file.
This window also enables to select tests from multiple files.

------------------------------------------------------------------------------
                                                           *Sf.run_current_test*
                             `Sf.run_current_test`
Run the Apex test under the cursor.
It uses Treesitter to determine @IsTest method.

------------------------------------------------------------------------------
                                                 *Sf.run_all_tests_in_this_file*
                        `Sf.run_all_tests_in_this_file`
Run all Apex tests in the current Apex file.

------------------------------------------------------------------------------
                                                          *Sf.repeat_last_tests*
                             `Sf.repeat_last_tests`
A convenient way to repeat the last executed Apex test command.


 vim:tw=78:ts=8:noet:ft=help:norl: