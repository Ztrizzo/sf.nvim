==============================================================================
------------------------------------------------------------------------------
*SFMd* The module dealing with metadata
*Sf md*

Features:

- Retrieve metadata from target_org
- Retrieve metadata-type from target_org
- Store metadata and metadata-type names into local json files

------------------------------------------------------------------------------
                                                    *Md.select_md_to_retrieve()*
                          `Md.select_md_to_retrieve`()
Choose a specific metadata file to retrieve.
Its popup list depends on data retrieved by |retrieve_metadata_lists| in prior.

------------------------------------------------------------------------------
                                                      *Md.pull_metadata_lists()*
                           `Md.pull_metadata_lists`()
Download metadata name list(without file content), e.g. Apex names, LWC names, StaticResource names, etc. as Json files into the the project root path "md" folder.

------------------------------------------------------------------------------
                                               *Md.retrieve_apex_under_cursor()*
                       `Md.retrieve_apex_under_cursor`()
Use the word under the cursor and attempt to retrieve as a Apex name from target_org.

------------------------------------------------------------------------------
                                                  *Md.pull_metadata_type_list()*
                         `Md.pull_metadata_type_list`()
Download metadata-type list, e.g. ApexClass, LWC, Aura, FlexiPage, etc. as a Json file into the project root path "md" folder.

------------------------------------------------------------------------------
                                               *Md.select_md_type_to_retrieve()*
                       `Md.select_md_type_to_retrieve`()
Select a specific metadata-type to download all files. For example, download all ApexClass files.
Its popup list depends on data retrieved by |pull_metadata_type_list| in prior.


==============================================================================
------------------------------------------------------------------------------
*SFOrg* The module to interact with Salesforce org
*Sf org*

Features:

- Retrieve org list and define target_org.
- Diff a file between local and org version.

------------------------------------------------------------------------------
                                                          *Org.fetch_org_list()*
                             `Org.fetch_org_list`()
It runs "sf org list" command under the hood and stores the org list.
If a target_org is found, the value is saved into "target_org" variable.

------------------------------------------------------------------------------
                                                          *Org.set_target_org()*
                             `Org.set_target_org`()
It displays the list of orgs, and allows you to define the target_org.
It runs "sf config set target-org" command under the hood to set the target_org.

------------------------------------------------------------------------------
                                                   *Org.set_global_target_org()*
                         `Org.set_global_target_org`()
sf command allows to define a global target_org.
It runs "sf config set target-org --global " command under the hood.

------------------------------------------------------------------------------
                                                      *Org.diff_in_target_org()*
                           `Org.diff_in_target_org`()
It fetches the file in the current buffer from target_org and display in the Nvim diff mode.
The left window displays the target_org verison, the right window displays the local verison.

------------------------------------------------------------------------------
                                                             *Org.diff_in_org()*
                              `Org.diff_in_org`()
Similar to |diff_in_target_org|, you can choose which org to diff with.
The left window displays the org verison, the right window displays the local verison.


==============================================================================
------------------------------------------------------------------------------
*SFTerm* The module to build an integrated terminal
*Sf term*

Features:

- Execute sf commands to interact with Salesforce orgs.
- Auto pop-up (configurable) when command execution finishes.

------------------------------------------------------------------------------
                                                                 *Term.toggle()*
                                `Term.toggle`()
Toggle the SFTerm float window.

------------------------------------------------------------------------------
                                                                   *Term.open()*
                                 `Term.open`()
Open the SFTerm float window.

------------------------------------------------------------------------------
                                                          *Term.save_and_push()*
                             `Term.save_and_push`()
Save the file in the current buffer and push to target_org. The command is sent to SFTerm.

------------------------------------------------------------------------------
                                                               *Term.retrieve()*
                               `Term.retrieve`()
Retrieve the file in the current buffer from target_org. The command is sent to SFTerm.

------------------------------------------------------------------------------
                                                                 *Term.cancel()*
                                `Term.cancel`()
Terminate the running command in SFTerm.

------------------------------------------------------------------------------
                                                          *Term.go_to_sf_root()*
                             `Term.go_to_sf_root`()
Enter the sf project root path in SFTerm.

------------------------------------------------------------------------------
                                                                    *Term.run()*
                                `Term.run`({c})
Allows to pass the user defined command into SFTerm.


==============================================================================
------------------------------------------------------------------------------
*SFTest* Test module
*Sf test*

Features:

- Apex test related features

------------------------------------------------------------------------------
                                                                   *Test.open()*
                                 `Test.open`()
Open a top window that displays the list of Apex tests in the current file.
Allows to select/deselect tests and execute.

------------------------------------------------------------------------------
                                                       *Test.run_current_test()*
                           `Test.run_current_test`()
Run the Apex test under the cursor in target_org. The command is sent to SFTerm.

------------------------------------------------------------------------------
                                             *Test.run_all_tests_in_this_file()*
                      `Test.run_all_tests_in_this_file`()
Run all Apex tests in the current Apex file in target_org. The command is sent to SFTerm.

------------------------------------------------------------------------------
                                                      *Test.repeat_last_tests()*
                           `Test.repeat_last_tests`()
Repeat the last executed Apex test command. The command is sent to SFTerm.


 vim:tw=78:ts=8:noet:ft=help:norl: